# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
export ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# #############################################################################################################################
# 							CUSTOM TWEAKINGS
# #############################################################################################################################

# Bundled software (typically cross platform stuff like IntelliJ) will be copied in /opt, and launchers will be symlinked to /opt/bin
export PATH=$PATH:/opt/bin

# Chezmoi will stoere executables in ~/.local/bin (putting the value last for security reasons, just in case)
export PATH=$PATH:~/.local/bin



DEFAULT_USER=quentin
TERM=xterm-256color

# Vim mode in zsh
bindkey -v

########## Aliases #############

alias sudo='nocorrect sudo -E ' ######### Sudo works with autocompletion, and sources the user env instead of root env (using my personal nvim, aliases etc)

alias vimproject="vim -u ~/.vimrc.ide ."

# docker aliases
alias docker-wipe="for container in \`docker ps -a | tail -n +2 | sed -E 's/([a-z0-9]*) .*/\1/g' | tr '\n' ' '\`; do docker rm $container; done"

#Â git aliases
alias gc="git checkout"
alias gp="git pull"
alias gr="git rebase"
alias gm="git commit -m"
alias gam="git commit -am"
alias gcm="git checkout master && git pull"
alias gpm="git checkout master && git pull && git checkout -"

alias gl="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gli="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit ..@{u}"
alias glo="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit @{u}.."
alias glh="git log --color --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gst="git status -sb"
# alias sw="git show --pretty="format:" --name-only"
alias gds="git diff --stat"
# alias wdiff="git diff --word-diff"
git config --global alias.stash-staged '!f() { git stash push -m "$1" -- $(git diff --staged --name-only); }; f'

# nvim as default editor for all programs
export VISUAL=nvim
export EDITOR="$VISUAL"

# SSH agent
if [[ $(uname -s) = Darwin ]]; then
	ssh-add -K ~/.ssh/id_rsa 2> /dev/null
else
	ssh-add ~/.ssh/id_rsa 2> /dev/null
fi

# Don't share history between tmux panes, but keep history file between sessions
HISTFILE=~/.zsh_history
HISTSIZE=999999999
SAVEHIST=999999999
setopt hist_ignore_all_dups #ignore dups (like thousands of ls -la)
setopt noincappendhistory
setopt nosharehistory
setopt appendhistory

ide() {
	local ide_path="."
	local name="$(basename $PWD)"
	if [ ! -z ${1+x} ]; then ide_path=$1 && name=$(basename $1); fi
	tmux new-window -d -n "$name" 
	tmux send-keys -t "$name" "cd \"$ide_path\"" C-m
	tmux split-window -p 20 -t "$name" && tmux send-keys -t "$name" "cd \"$ide_path\"" C-m
	tmux split-window -h -t "$name" && tmux send-keys -t "$name" "cd \"$ide_path\"" C-m
	tmux select-pane -U -t "$name"
	tmux send-keys -t "$name" "vimproject" C-m 
	tmux select-window -t "$name"
}

nvim_project() {
  local arg="${1:-.}"
  local project_dir=$(readlink -f "$arg")
  echo "Opening project in $project_dir"
  local previousTmuxName=$(tmux display-message -p '#W')
  tmux rename-window "$(basename $PWD)" 
  (cd "$project_dir"; nvim .)
  tmux rename-window "$previousTmuxName" 
}

# neo vim
PATH=$PATH:~/app-images

# asdf (version manager for many, if not all, languages)
export ASDF_DIR=/opt/asdf-vm # needed for some distros
export ASDF_GOLANG_MOD_VERSION_ENABLED=true # useful for older asdf
export ASDF_NODEJS_LEGACY_FILE_DYNAMIC_STRATEGY=latest_installed # allow .nvmrc aliases like "18"
. /opt/asdf-vm/asdf.sh # enable asdf

# go
if command -v go &> /dev/null; then
	export GOPATH=$(go env GOPATH):~/perso/
	export PATH=$PATH:$GOPATH/bin
fi

# java
. ~/.asdf/plugins/java/set-java-home.zsh

# RaspbPi Pico dev
export PICO_SDK_PATH=~/perso/electronics/pico/pico-sdk
upload-to-pico() {
	picotool load "$(find . -type f -name "*.uf2")" -xf
}

# Secrets, FILE THAT SHOULD NEVER GET COMMITTED
[ -f ~/.secrets-zshrc ] && source ~/.secrets-zshrc

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# Fix problem with docker requiring root privileges
unset DOCKER_HOST

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

###########################################################
#    OS settings                                          #
###########################################################

hwmon_temp() {
	local label_search_str="$1"
	local sensors=""
	for i in /sys/class/hwmon/hwmon*/temp*_input; do
		sensors+="$(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*}));$(readlink -f $i)\n" 
	done 
	echo $sensors | grep "$label_search_str" | cut -d ";" -f 2
}	

###########################################################
#    Mission specific                                     #
###########################################################

source ~/.disney-zshrc
